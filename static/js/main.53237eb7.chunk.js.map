{"version":3,"sources":["components/Loading.module.scss","components/SettingsModal.module.scss","utils.js","tips.js","components/MainRoute.js","useSetting.js","components/SettingsModal.js","components/LearnRoute.js","components/Loading.js","App.js","reportWebVitals.js","index.js","components/MainRoute.module.scss","components/LearnRoute.module.scss"],"names":["module","exports","equalsIgnoreAccentAndCaseAndNonLetters","s1","s2","accents","cleanup","s","replaceAll","removeNonLetters","res","polish","normal","replacePolishAccent","toLowerCase","getAcceptableAnswers","names","cartesian","a","reduce","b","flatMap","d","map","e","flat","helper","depth","length","Array","fill","name","filter","arr","Set","size","join","preloadImage","src","Promise","r","image","Image","onload","onerror","tips","randomTip","array","Math","floor","random","MainRoute","sectionData","useState","isPreloadDone","setIsPreloadDone","tip","setTip","useEffect","className","styles","body","navbar","title","tipBar","tipBarContent","mainContainer","main","to","sectionLink","sectionLinkText","section","codeName","friendlyName","optimize","optimizeButton","onClick","event","preventDefault","imageUrls","items","item","imageUrl","all","x","then","footer","useSetting","key","defaultValue","Error","cachedValue","setCachedValue","refresh","storedValue","localStorage","getItem","console","log","parsed","JSON","parse","value","setItem","stringify","SettingsModal","handleClose","background","useRef","showAnswerOverImage","setShowAnswerOverImage","ref","target","current","card","type","id","checked","onChange","htmlFor","LearnRoute","sectionCodeName","useParams","toSolve","setToSolve","solved","setSolved","isShowingSolution","setIsShowingSolution","isTextCorrect","setIsTextCorrect","userAnswer","setUserAnswer","isSettingsOpen","setIsSettingsOpen","refreshAnswerOverImage","userAnswerInput","itemWithSectionName","sectionFriendlyName","setShuffledToSolve","arrayToShuffle","randomIndex","currentIndex","shuffled","find","next","handleGoNext","isSuccess","slice","focus","window","history","go","handleShowAnswer","answers","answerOption","learnGrid","questContainer","alt","answerOverQuest","answerContainer","inputContainer","inputUpper","inputUpperUpper","answerForm","onSubmit","answerText","isCorrect","some","autoComplete","input","good","bad","max","Loading","error","loadingText","setLoadingText","container","subtext","App","sections","setSections","setSectionData","loadingError","setLoadingError","parseRows","text","tbody","DOMParser","parseFromString","querySelector","from","children","fetch","data","row","querySelectorAll","elem","textContent","catch","ex","sectionSheetName","rs","sheets","sheet","rowElems","getAttribute","replace","innerText","elementLists","i","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53237eb7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loading_container__1qVio\",\"tip\":\"Loading_tip__3zvXX\",\"subtext\":\"Loading_subtext__3Iejr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"SettingsModal_background__33U9i\",\"card\":\"SettingsModal_card__2e5_Z\"};","// adapted from and edited https://stackoverflow.com/a/2450976/4541480\r\nexport function shuffled(arrayToShuffle) {\r\n  const array = [...arrayToShuffle];\r\n  let currentIndex = array.length, randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (currentIndex !== 0) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nexport function randomElement(array) {\r\n  return array[Math.floor(Math.random() * array.length)];\r\n}\r\n\r\nexport function equalsIgnoreAccentAndCaseAndNonLetters(s1, s2) {\r\n  const accents = [['ą', 'a'], ['ć', 'c'], ['ę', 'e'], ['ł', 'l'], ['ń', 'n'], ['ó', 'o'], ['ś', 's'], ['ź', 'z'], ['ż', 'z']];\r\n\r\n  const replacePolishAccent = (s) => {\r\n    let res = s;\r\n    for (const [polish, normal] of accents) {\r\n      res = res.replaceAll(polish, normal);\r\n    }\r\n    return res;\r\n  };\r\n\r\n  const removeNonLetters = (s) => s.replaceAll(/[^a-z ]/g, '');\r\n\r\n  const cleanup = (s) => removeNonLetters(replacePolishAccent(s.toLowerCase()));\r\n\r\n  return cleanup(s1) === cleanup(s2);\r\n}\r\n\r\n// do NOT touch this function - if it works, don't fix it\r\nfunction getAcceptableAnswers(names) {\r\n  const cartesian = (...a) => a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\r\n  const helper = (a, depth) => {\r\n    if (depth > names.length) return a;\r\n    return helper([...a, ...cartesian(...Array(depth).fill(names))], depth + 1);\r\n  };\r\n  return helper(names.map(name => [name]), 2).filter(arr => new Set(arr).size === arr.length).map(arr => arr.join(' '));\r\n}\r\n\r\nexport function isAnswerCorrect(currentItem, answerText) {\r\n  return getAcceptableAnswers(currentItem.names).some(name => equalsIgnoreAccentAndCaseAndNonLetters(name, answerText));\r\n}\r\n\r\nexport const preloadImage = (src) =>\r\n    new Promise(r => {\r\n      const image = new Image();\r\n      image.onload = r;\r\n      image.onerror = r;\r\n      image.src = src;\r\n    });\r\n","import { randomElement } from './utils'\r\n\r\nexport const tips = [\r\n  'sen sprzyja zapamiętywaniu',\r\n  'pij dwa litry wody dziennie',\r\n  'organizm wymaga regularnego jedzenia',\r\n]\r\n\r\nexport const randomTip = () => randomElement(tips)","import { Link } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport { preloadImage } from '../utils'\r\nimport styles from './MainRoute.module.scss'\r\nimport { randomTip } from '../tips'\r\n\r\nexport default function MainRoute ({ sectionData }) {\r\n  const [isPreloadDone, setIsPreloadDone] = useState(null)\r\n  const [tip, setTip] = useState(null)\r\n\r\n  const handlePreloadImages = (event) => {\r\n    event.preventDefault()\r\n    setIsPreloadDone(false)\r\n\r\n    const imageUrls = sectionData.flatMap(\r\n      section => section.items.map(item => item.imageUrl))\r\n    Promise.all(imageUrls.map(x => preloadImage(x))).then(() => {\r\n      setIsPreloadDone(true)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTip(randomTip())\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <nav className={styles.navbar}>\r\n        <h1 className={styles.title}>Point Game</h1>\r\n      </nav>\r\n      <div className={styles.tipBar}>\r\n        <div className={styles.tipBarContent}>protip — {tip}</div>\r\n      </div>\r\n      <div className={styles.mainContainer}>\r\n        <main className={styles.main}>\r\n          <Link to=\"/train/all\" className={styles.sectionLink}>\r\n            <span className={styles.sectionLinkText}>Wszystkie działy</span>\r\n          </Link>\r\n          {sectionData ? sectionData.map(section =>\r\n            <Link key={section.codeName} className={styles.sectionLink}\r\n                  to={`/train/${section.codeName}`}>\r\n              <span\r\n                className={styles.sectionLinkText}>{section.friendlyName}</span>\r\n            </Link>,\r\n          ) : ''}\r\n          <section className={styles.optimize}>\r\n            <div>Jeśli nie szkoda ci internetu to dla płynniejszego działania\r\n              aplikacji możesz na zapas pobrać z góry wszystkie\r\n              zdjęcia do pamięci podręcznej\r\n            </div>\r\n            <button className={styles.optimizeButton}\r\n                    onClick={handlePreloadImages}>\r\n              Wczytaj obrazki\r\n            </button>\r\n            {isPreloadDone === false ? <div>Wczytywanie obrazków...</div> : ''}\r\n            {isPreloadDone === true ? <div>Obrazki wczytane</div> : ''}\r\n          </section>\r\n        </main>\r\n      </div>\r\n      <footer className={styles.footer}>\r\n        <div>Copyright Nicofisi 2021 | Wersja 2.7.0</div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n","import {useState} from 'react';\r\n\r\nconst useSetting = (key, defaultValue) => {\r\n  if (defaultValue == null) {\r\n    throw Error('The default value must not be null');\r\n  }\r\n\r\n  const [cachedValue, setCachedValue] = useState(null);\r\n\r\n  const handleChangeValue = (value) => {\r\n    console.log('saving', value);\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n    setCachedValue(value);\r\n  };\r\n\r\n  const refresh = () => {\r\n    const storedValue = localStorage.getItem(key);\r\n    console.log('reading', storedValue);\r\n    if (storedValue == null) {\r\n      // no need to set the default value in localStorage\r\n      // this way we can change the defaults for users later on\r\n      setCachedValue(defaultValue);\r\n    } else {\r\n      const parsed = JSON.parse(storedValue);\r\n      setCachedValue(parsed);\r\n    }\r\n  };\r\n\r\n  if (cachedValue == null) {\r\n    refresh();\r\n  }\r\n\r\n  return [cachedValue, handleChangeValue, refresh];\r\n};\r\n\r\nexport default useSetting;","import useSetting from '../useSetting';\r\nimport styles from './SettingsModal.module.scss';\r\nimport {useRef} from 'react';\r\n\r\nexport default function SettingsModal({handleClose}) {\r\n  const background = useRef();\r\n  const [showAnswerOverImage, setShowAnswerOverImage] = useSetting(\r\n      'show-answer-over-image', false,\r\n  );\r\n\r\n  console.log('XD', showAnswerOverImage);\r\n\r\n  const handleChangeShowAnswerOverImage = (event) => {\r\n    setShowAnswerOverImage(event.target.checked);\r\n  };\r\n\r\n  const handleCloseButton = () => {\r\n    handleClose();\r\n  };\r\n\r\n  const handleCloseBackground = (event) => {\r\n    if (event.target === background.current) {\r\n      handleClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div className={styles.background} ref={background} onClick={handleCloseBackground}>\r\n        <article className={styles.card}>\r\n          <h1>Ustawienia</h1>\r\n          <p>\r\n            <input type=\"checkbox\" id=\"answer-over-image\"\r\n                   name=\"answer-over-image\"\r\n                   checked={showAnswerOverImage ?? false}\r\n                   onChange={handleChangeShowAnswerOverImage}/>\r\n            <label htmlFor=\"answer-over-image\">Wyświetlaj odpowiedź nad\r\n              obrazkiem</label>\r\n          </p>\r\n          <button onClick={handleCloseButton}>Zapisz i zamknij</button>\r\n        </article>\r\n      </div>\r\n  );\r\n}","import {useEffect, useRef, useState} from 'react';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {isAnswerCorrect, preloadImage, shuffled} from '../utils';\r\nimport styles from './LearnRoute.module.scss';\r\nimport useSetting from '../useSetting';\r\nimport SettingsModal from './SettingsModal';\r\n\r\nexport default function LearnRoute({sectionData}) {\r\n  const {sectionCodeName} = useParams();\r\n\r\n  const [toSolve, setToSolve] = useState(null);\r\n  const [solved, setSolved] = useState(null);\r\n  const [isShowingSolution, setIsShowingSolution] = useState(null);\r\n  const [isTextCorrect, setIsTextCorrect] = useState(null);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [showAnswerOverImage, setShowAnswerOverImage, refreshAnswerOverImage] = useSetting(\r\n      'show-answer-over-image', false,\r\n  );\r\n\r\n  const userAnswerInput = useRef(null);\r\n\r\n  const [current] = toSolve ?? [];\r\n\r\n  // initialize component when sectionData or URL changes\r\n  useEffect(() => {\r\n    const itemWithSectionName = (section) => (item) => {\r\n      return {...item, sectionFriendlyName: section.friendlyName};\r\n    };\r\n\r\n    const setShuffledToSolve = (arr) => {\r\n      setToSolve(shuffled(arr));\r\n    };\r\n\r\n    if (sectionCodeName === 'all') {\r\n      setShuffledToSolve(sectionData.flatMap(\r\n          section => section.items.map(itemWithSectionName(section))));\r\n    } else {\r\n      const section = sectionData.find(\r\n          section => section.codeName === sectionCodeName);\r\n      if (section == null) {\r\n        setToSolve(null);\r\n        setSolved(null);\r\n        return;\r\n      }\r\n      setShuffledToSolve(section.items.map(itemWithSectionName(section)));\r\n    }\r\n    setSolved([]);\r\n    setIsTextCorrect(null);\r\n  }, [sectionCodeName, sectionData]);\r\n\r\n  // pre-fetch the next image\r\n  useEffect(() => {\r\n    if (toSolve) {\r\n      const next = toSolve[1];\r\n      if (next) {\r\n        preloadImage(next.imageUrl);\r\n      }\r\n    }\r\n  }, [toSolve]);\r\n\r\n  const handleGoNext = (event, isSuccess) => {\r\n    if (event) event.preventDefault();\r\n    if (isSuccess) {\r\n      setToSolve(toSolve.slice(1));\r\n      setSolved([...solved, current]);\r\n    } else {\r\n      if (toSolve.length > 1) {\r\n        setToSolve([...toSolve.slice(1, 2), current, ...toSolve.slice(2)]);\r\n      }\r\n    }\r\n    setIsShowingSolution(false);\r\n    setIsTextCorrect(null);\r\n    setUserAnswer('');\r\n    userAnswerInput.current.focus();\r\n  };\r\n  const handleAmRight = (event) => handleGoNext(event, true);\r\n  const handleAmWrong = (event) => handleGoNext(event, false);\r\n\r\n  if (toSolve == null) {\r\n    return (\r\n        <div>\r\n          Nie istnieje taka sekcja, wróć do <Link to=\"/\">strony głównej</Link>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  if (current == null) {\r\n    return (\r\n        <div>\r\n          Brawo, zdałxś!!!!!!!! <button\r\n            onClick={() => window.history.go(0)}> Zacznij od nowa</button> bądź\r\n          <Link to=\"/\"> przejdź do menu głównego</Link>, ewentualnie idź spać\r\n        </div>\r\n    );\r\n  }\r\n\r\n  const handleShowAnswer = (event) => {\r\n    if (event) event.preventDefault();\r\n    setIsShowingSolution(true);\r\n  };\r\n\r\n  const handleSubmitTextAnswer = (event) => {\r\n    event.preventDefault();\r\n    const isCorrect = isAnswerCorrect(current, userAnswer);\r\n    if (userAnswer !== '')\r\n      setIsTextCorrect(isCorrect);\r\n    else\r\n      handleShowAnswer();\r\n    if (isCorrect) {\r\n      if (isTextCorrect) { // if clicked enter again\r\n        handleGoNext(null, true);\r\n      }\r\n      handleShowAnswer();\r\n    }\r\n  };\r\n\r\n  const handleAnswerTextChanged = (event) => {\r\n    // hide 'correct' or 'incorrect' when the text input changes\r\n    setIsTextCorrect(null);\r\n    setUserAnswer(event.target.value);\r\n  };\r\n\r\n  const answers = isShowingSolution ?\r\n      current.names.map(name =>\r\n          <div key={name} className={styles.answerOption}>{name}</div>,\r\n      ) : '';\r\n\r\n  const handleSettingsClose = () => {\r\n    refreshAnswerOverImage();\r\n    setIsSettingsOpen(false);\r\n  };\r\n\r\n  const handleOpenSettings = () => {\r\n    setIsSettingsOpen(true);\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        <div className={styles.learnGrid}>\r\n          <div className={styles.questContainer}>\r\n            <img src={current.imageUrl}\r\n                 alt=\"tutaj powinien być obrazek z pytaniem\"/>\r\n            {(isShowingSolution && showAnswerOverImage) ?\r\n                <div className={styles.answerOverQuest}>\r\n                  {answers}\r\n                </div> : ''\r\n            }\r\n          </div>\r\n          {isShowingSolution ?\r\n              <div className={styles.answerContainer}>\r\n                {answers}\r\n              </div> : ''\r\n          }\r\n          <div className={styles.inputContainer}>\r\n            <div className={styles.inputUpper}>\r\n              <div className={styles.inputUpperUpper}>\r\n                {isShowingSolution ?\r\n                    <>\r\n                      <button onClick={handleAmRight}>Wiem</button>\r\n                      <button onClick={handleAmWrong}>Nie wiem</button>\r\n                    </> :\r\n                    <>\r\n                      <button onClick={handleShowAnswer}>Pokaż odpowiedź\r\n                      </button>\r\n                    </>\r\n                }\r\n\r\n                <form className={styles.answerForm}\r\n                      onSubmit={handleSubmitTextAnswer} autoComplete=\"off\">\r\n                  <input ref={userAnswerInput} type=\"text\" name=\"answer\"\r\n                         className={styles.input}\r\n                         onChange={handleAnswerTextChanged}\r\n                         value={userAnswer} autoComplete=\"off\"/>\r\n                  <button type=\"submit\">Sprawdź</button>\r\n                </form>\r\n              </div>\r\n              <div>\r\n                {isTextCorrect === true ? <span\r\n                    className={styles.good}>dobrze</span> : ''}\r\n                {isTextCorrect === false\r\n                    ? <span className={styles.bad}>źle</span>\r\n                    : ''}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div>\r\n                <button onClick={handleOpenSettings}>Ustawienia</button>\r\n              </div>\r\n              <div>\r\n                wiesz: {solved.length} | nie wiesz: {toSolve.length}\r\n              </div>\r\n              <div>\r\n                <progress id=\"file\" max={solved.length + toSolve.length}\r\n                          value={solved.length}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {isSettingsOpen\r\n            ? <SettingsModal handleClose={handleSettingsClose}/>\r\n            : ''}\r\n      </div>\r\n  );\r\n}\r\n","import styles from './Loading.module.scss'\r\nimport { useEffect, useState } from 'react'\r\nimport { randomTip } from '../tips'\r\n\r\nexport default function Loading({error}) {\r\n  const [loadingText, setLoadingText] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoadingText(randomTip())\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.tip}>{loadingText}</div>\r\n      <div className={styles.subtext}>{error ?? \"ładowanie\"}</div>\r\n    </div>\r\n  )\r\n}","import './App.css'\r\nimport { useEffect, useState } from 'react'\r\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\r\nimport MainRoute from './components/MainRoute'\r\nimport TrainRoute from './components/LearnRoute'\r\nimport Loading from './components/Loading'\r\n\r\nfunction App () {\r\n  const [sections, setSections] = useState(null)\r\n  const [sectionData, setSectionData] = useState(null)\r\n  const [loadingError, setLoadingError] = useState(null)\r\n\r\n  const parseRows = (text) => {\r\n    const parser = new DOMParser()\r\n    const htmlDoc = parser.parseFromString(text, 'text/html')\r\n    const tbody = htmlDoc.querySelector('tbody')\r\n    return Array.from(tbody.children)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch('/point-game/data/zzz_działy.html').\r\n      then((r) => r.text()).then(text => {\r\n      const data = parseRows(text).map(row => {\r\n        const rowElems = Array.from(row.querySelectorAll('td'))\r\n        return rowElems.map(elem => elem.textContent)\r\n      })\r\n      setSections(data)\r\n    }).\r\n      catch(ex => {\r\n        console.log(ex)\r\n        setLoadingError(\r\n          'nie udało się pobrać lub przetworzyć pliku zzz_działy.html')\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (sections)\r\n      Promise.all(sections.map(([, sectionSheetName]) => fetch(\r\n        `/point-game/data/${sectionSheetName}.html`))).\r\n        then(rs => Promise.all(rs.map(r => r.text()))).\r\n        then(sheets => {\r\n          return sheets.map(sheet => {\r\n              return parseRows(sheet).slice(1).map(row => {\r\n                const rowElems = Array.from(row.querySelectorAll('td'))\r\n                const imageUrl = rowElems[0].children.item(0).\r\n                  children.\r\n                  item(0).\r\n                  getAttribute('src').\r\n                  replace(/=w\\d+-h\\d+$/, '')\r\n                return {\r\n                  imageUrl,\r\n                  names: rowElems.slice(1).map(elem => elem.innerText),\r\n                }\r\n              })\r\n            },\r\n          )\r\n        }).\r\n        then(elementLists => {\r\n          return sections.map(([sectionCodeName, sectionFriendlyName], i) => {\r\n            return {\r\n              codeName: sectionCodeName,\r\n              friendlyName: sectionFriendlyName,\r\n              items: elementLists[i],\r\n            }\r\n          })\r\n        }).\r\n        then(data => {\r\n          setSectionData(data)\r\n        }).\r\n        catch(ex => {\r\n          console.log(ex)\r\n          setLoadingError(\r\n            'nie udało się pobrać lub przetworzyć jednego z plików z fiszkami')\r\n        })\r\n  }, [sections])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {sectionData ?\r\n        (<HashRouter>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <MainRoute sectionData={sectionData}/>\r\n            </Route>\r\n            <Route path=\"/train/:sectionCodeName\">\r\n              <TrainRoute sectionData={sectionData}/>\r\n            </Route>\r\n            <Redirect to=\"/\"/>\r\n          </Switch>\r\n        </HashRouter>) :\r\n        <Loading error={loadingError}/>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"MainRoute_body__1IMBH\",\"navbar\":\"MainRoute_navbar__J4lt4\",\"title\":\"MainRoute_title__BwU7b\",\"tipBar\":\"MainRoute_tipBar__3rVah\",\"tipBarContent\":\"MainRoute_tipBarContent__4AkFP\",\"mainContainer\":\"MainRoute_mainContainer__L6es0\",\"main\":\"MainRoute_main__2oMFx\",\"sectionLink\":\"MainRoute_sectionLink__2sD9m\",\"sectionLinkText\":\"MainRoute_sectionLinkText__1pUoI\",\"optimize\":\"MainRoute_optimize__1ioBY\",\"optimizeButton\":\"MainRoute_optimizeButton__2stW2\",\"footer\":\"MainRoute_footer__3MhMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learnGrid\":\"LearnRoute_learnGrid__pNAv7\",\"questContainer\":\"LearnRoute_questContainer__1nqUJ\",\"answerContainer\":\"LearnRoute_answerContainer__2gg5v\",\"answerOption\":\"LearnRoute_answerOption__1oKiO\",\"inputContainer\":\"LearnRoute_inputContainer__3gmTt\",\"inputUpper\":\"LearnRoute_inputUpper__2M-cW\",\"inputUpperUpper\":\"LearnRoute_inputUpperUpper__fuX44\",\"input\":\"LearnRoute_input__3nB-G\",\"result\":\"LearnRoute_result__3Yo_M\",\"good\":\"LearnRoute_good__EVANt LearnRoute_result__3Yo_M\",\"bad\":\"LearnRoute_bad__1tRC3 LearnRoute_result__3Yo_M\",\"answerForm\":\"LearnRoute_answerForm__28i-N\",\"answerOverQuest\":\"LearnRoute_answerOverQuest__1L3d8\"};"],"sourceRoot":""}